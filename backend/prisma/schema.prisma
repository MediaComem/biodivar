// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                      Int         @id @default(autoincrement())
  email                   String      @unique
  username                String      @unique
  password                String
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  biovers                 Biovers[]
  author_poi              Poi[]       @relation(name: "poi_author")
  last_contrubutor_poi    Poi[]       @relation(name: "poi_last_contributor")
  author_path             Path[]      @relation(name: "path_author")
  last_contrubutor_path   Path[]      @relation(name: "path_last_contributor")
}

model Biovers {
  id                      Int         @id @default(autoincrement())
  name                    String
  owner                   Int
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  is_public               Boolean     @default(true)
  User                    User?       @relation(fields: [owner], references: [id])
  Poi                     Poi[]
  Path                    Path[]
}

model Poi {
  id                      Int         @id @default(autoincrement())
  title                   String?
  title_is_visible        Boolean?    @default(false)
  subtitle                String?
  subtitle_is_visible     Boolean?    @default(false)
  author                  Int
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  last_contributor        Int?
  is_public               Boolean     @default(true)
  is_editable             Boolean     @default(false)
  biovers                 Int
  radius                  Float
  style_type              String
  style_stroke            Boolean
  style_stroke_width      Float
  style_fill              Boolean
  style_elevation         Float
  style_elevation_ground  Float
  style_noise             Float
  style_is_visible        Boolean
  visible_from            Float
  trigger_mode            String
  metadata                String?
  coordinate              Coordinate?
  symbol                  Symbol?
  biovers_fk              Biovers     @relation(fields: [biovers], references: [id])
  User                    User        @relation(name: "poi_author", fields: [author], references: [id])
  last_contributor_fk     User?       @relation(name: "poi_last_contributor", fields: [last_contributor], references: [id])
}

model Path {
  id                      Int         @id @default(autoincrement())
  author                  Int
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  last_contributor        Int?
  is_public               Boolean     @default(true)
  is_editable             Boolean     @default(false)      
  coordinate              Coordinate[]
  biovers                 Int
  style_type              String
  style_stroke            Boolean
  style_stroke_width      Float
  style_elevation         Float
  style_elevation_ground  Float
  style_noise             Float
  style_is_visible        Boolean
  visible_from            Float
  metadata                String?
  biovers_fk              Biovers     @relation(fields: [biovers], references: [id])
  User                    User        @relation(name: "path_author", fields: [author], references: [id])
  last_contributor_fk     User?       @relation(name: "path_last_contributor", fields: [last_contributor], references: [id])
}

model Coordinate {
  id                      Int         @id @default(autoincrement())
  long                    Float
  lat                     Float
  alt                     Float
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  poi_id                  Int?
  poi                     Poi?         @relation(fields: [poi_id], references: [id])
  path_id                 Int?
  path                    Path?        @relation(fields: [path_id], references: [id])
}

model Symbol {
  id                      Int          @id @default(autoincrement())
  media_type              String
  url                     String
  elevation_ground        Float
  is_facing_user          Boolean
  is_visible              Boolean
  creation_date           DateTime
  update_date             DateTime?
  deleted_date            DateTime?
  poi_id                  Int?
  poi                     Poi?         @relation(fields: [poi_id], references: [id])
}